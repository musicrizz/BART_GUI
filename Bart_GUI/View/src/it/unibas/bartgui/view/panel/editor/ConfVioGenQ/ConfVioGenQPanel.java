/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.unibas.bartgui.view.panel.editor.ConfVioGenQ;

import javax.swing.text.Document;

/**
 *
 * @author Grandinetti Giovanni <grandinetti.giovanni13@gmail.com>
 */
public class ConfVioGenQPanel extends javax.swing.JPanel {

    /**
     * Creates new form ConfVioGenQPanel
     */
    public ConfVioGenQPanel() {
        initComponents();
        initNameComponet();
    }
    
    private void initNameComponet()   {
        maxNumberOfRowsForSingleTupleQueriesjTextField1.setName("maxNumberOfRowsForSingleTupleQueries");
        offsetFactorForInequalityQueriesjTextField1.setName("offsetFactorForInequalityQueries");
        offsetFactorForSingleTupleQueriesjTextField1.setName("offsetFactorForSingleTupleQueries");
        offsetFactorForStandardQueriesjTextField1.setName("offsetFactorForStandardQueries");
        offsetFactorForSymmetricQueriesjTextField1.setName("offsetFactorForSymmetricQueries");
        percentagjTextField1.setName("percentage");
        probabilityFactorForInequalityQueriesTextField.setName("probabilityFactorForInequalityQueries");
        probabilityFactorForSingleTupleQueriesTextField.setName("probabilityFactorForSingleTupleQueries");
        probabilityFactorForStandardQueriesTextField.setName("probabilityFactorForStandardQueries");
        probabilityFactorForSymmetricQueriesTextField.setName("probabilityFactorForSymmetricQueries");
        queryExecutorjTextField1.setName("queryExecutor");
        sizeFactorForInequalityQueriesTextField.setName("sizeFactorForInequalityQueries");
        sizeFactorForSingleTupleQueriesTextField.setName("sizeFactorForSingleTupleQueries");
        sizeFactorForStandardQueriesTextField.setName("sizeFactorForStandardQueries");
        sizeFactorForSymmetricQueriesTextField.setName("sizeFactorForSymmetricQueries");
        useLimitInInequalityQueriesjCheckBox1.setName("useLimitInInequalityQueries");
        useLimitInSingleTupleQueriesjCheckBox1.setName("useLimitInSingleTupleQueries");
        useLimitInStandardQueriesjCheckBox1.setName("useLimitInStandardQueries");
        useLimitInSymmetricQueriesjCheckBox1.setName("useLimitInSymmetricQueries");
        useOffsetInInequalityQueriesjCheckBox1.setName("useOffsetInInequalityQueries");
        useOffsetInSingleTupleQueriesjCheckBox1.setName("useOffsetInSingleTupleQueries");
        useOffsetInStandardQueriesjCheckBox1.setName("useOffsetInStandardQueries");
        useOffsetInSymmetricQueriesjCheckBox1.setName("useOffsetInSymmetricQueries");
        windowSizeFactorForInequalityQueriesjTextField1.setName("windowSizeFactorForInequalityQueries1");
        windowSizeFactorForSingleTupleQueriesjTextField1.setName("windowSizeFactorForSingleTupleQueries");
        windowSizeFactorForStandardQueriesTextField.setName("windowSizeFactorForStandardQueries");
        windowSizeFactorForSymmetricQueriesjTextField1.setName("windowSizeFactorForSymmetricQueries");
    }

    public Document[] getAllDocument()   {
        Document[] d = {
                maxNumberOfRowsForSingleTupleQueriesjTextField1.getDocument(),
                offsetFactorForInequalityQueriesjTextField1.getDocument(),
                offsetFactorForSingleTupleQueriesjTextField1.getDocument(),
                offsetFactorForStandardQueriesjTextField1.getDocument(),
                offsetFactorForSymmetricQueriesjTextField1.getDocument(),
                percentagjTextField1.getDocument(),
                probabilityFactorForInequalityQueriesTextField.getDocument(),
                probabilityFactorForSingleTupleQueriesTextField.getDocument(),
                probabilityFactorForStandardQueriesTextField.getDocument(),
                probabilityFactorForSymmetricQueriesTextField.getDocument(),
                queryExecutorjTextField1.getDocument(),
                sizeFactorForInequalityQueriesTextField.getDocument(),
                sizeFactorForSingleTupleQueriesTextField.getDocument(),
                sizeFactorForStandardQueriesTextField.getDocument(),
                sizeFactorForSymmetricQueriesTextField.getDocument(),
                windowSizeFactorForInequalityQueriesjTextField1.getDocument(),
                windowSizeFactorForSingleTupleQueriesjTextField1.getDocument(),
                windowSizeFactorForStandardQueriesTextField.getDocument(),
                windowSizeFactorForSymmetricQueriesjTextField1.getDocument(),                 
        };
        return d;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        useLimitInStandardQueriesjCheckBox1 = new javax.swing.JCheckBox();
        useLimitInSymmetricQueriesjCheckBox1 = new javax.swing.JCheckBox();
        useLimitInInequalityQueriesjCheckBox1 = new javax.swing.JCheckBox();
        useLimitInSingleTupleQueriesjCheckBox1 = new javax.swing.JCheckBox();
        useOffsetInStandardQueriesjCheckBox1 = new javax.swing.JCheckBox();
        useOffsetInSymmetricQueriesjCheckBox1 = new javax.swing.JCheckBox();
        useOffsetInInequalityQueriesjCheckBox1 = new javax.swing.JCheckBox();
        useOffsetInSingleTupleQueriesjCheckBox1 = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        percentagjTextField1 = new javax.swing.JTextField();
        queryExecutorjTextField1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        maxNumberOfRowsForSingleTupleQueriesjTextField1 = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        sizeFactorForStandardQueriesTextField = new javax.swing.JTextField();
        sizeFactorForSymmetricQueriesTextField = new javax.swing.JTextField();
        sizeFactorForInequalityQueriesTextField = new javax.swing.JTextField();
        sizeFactorForSingleTupleQueriesTextField = new javax.swing.JTextField();
        probabilityFactorForStandardQueriesTextField = new javax.swing.JTextField();
        probabilityFactorForSymmetricQueriesTextField = new javax.swing.JTextField();
        probabilityFactorForInequalityQueriesTextField = new javax.swing.JTextField();
        probabilityFactorForSingleTupleQueriesTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        windowSizeFactorForStandardQueriesTextField = new javax.swing.JTextField();
        windowSizeFactorForSymmetricQueriesjTextField1 = new javax.swing.JTextField();
        windowSizeFactorForInequalityQueriesjTextField1 = new javax.swing.JTextField();
        windowSizeFactorForSingleTupleQueriesjTextField1 = new javax.swing.JTextField();
        offsetFactorForStandardQueriesjTextField1 = new javax.swing.JTextField();
        offsetFactorForSymmetricQueriesjTextField1 = new javax.swing.JTextField();
        offsetFactorForInequalityQueriesjTextField1 = new javax.swing.JTextField();
        offsetFactorForSingleTupleQueriesjTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();

        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setMinimumSize(new java.awt.Dimension(874, 282));
        setName(""); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel17, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel17.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel18, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel18.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useLimitInStandardQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useLimitInStandardQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useLimitInSymmetricQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useLimitInSymmetricQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useLimitInInequalityQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useLimitInInequalityQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useLimitInSingleTupleQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useLimitInSingleTupleQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useOffsetInStandardQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useOffsetInStandardQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useOffsetInSymmetricQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useOffsetInSymmetricQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useOffsetInInequalityQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useOffsetInInequalityQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useOffsetInSingleTupleQueriesjCheckBox1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.useOffsetInSingleTupleQueriesjCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel19, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel19.text")); // NOI18N

        percentagjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.percentagjTextField1.text")); // NOI18N

        queryExecutorjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.queryExecutorjTextField1.text")); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 153, 51));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel20, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel20.text")); // NOI18N

        maxNumberOfRowsForSingleTupleQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.maxNumberOfRowsForSingleTupleQueriesjTextField1.text")); // NOI18N

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(percentagjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(queryExecutorjTextField1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(useLimitInSymmetricQueriesjCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(useLimitInStandardQueriesjCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(useLimitInInequalityQueriesjCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(useLimitInSingleTupleQueriesjCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(useOffsetInStandardQueriesjCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(useOffsetInSymmetricQueriesjCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(useOffsetInInequalityQueriesjCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(useOffsetInSingleTupleQueriesjCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxNumberOfRowsForSingleTupleQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(percentagjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(queryExecutorjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(useLimitInStandardQueriesjCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(useLimitInSymmetricQueriesjCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(useLimitInInequalityQueriesjCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(useLimitInSingleTupleQueriesjCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(useOffsetInStandardQueriesjCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(useOffsetInSymmetricQueriesjCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(useOffsetInInequalityQueriesjCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(useOffsetInSingleTupleQueriesjCheckBox1))
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(maxNumberOfRowsForSingleTupleQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel8.text")); // NOI18N

        sizeFactorForStandardQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.sizeFactorForStandardQueriesTextField.text")); // NOI18N

        sizeFactorForSymmetricQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.sizeFactorForSymmetricQueriesTextField.text")); // NOI18N

        sizeFactorForInequalityQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.sizeFactorForInequalityQueriesTextField.text")); // NOI18N

        sizeFactorForSingleTupleQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.sizeFactorForSingleTupleQueriesTextField.text")); // NOI18N

        probabilityFactorForStandardQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.probabilityFactorForStandardQueriesTextField.text")); // NOI18N

        probabilityFactorForSymmetricQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.probabilityFactorForSymmetricQueriesTextField.text")); // NOI18N

        probabilityFactorForInequalityQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.probabilityFactorForInequalityQueriesTextField.text")); // NOI18N

        probabilityFactorForSingleTupleQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.probabilityFactorForSingleTupleQueriesTextField.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sizeFactorForStandardQueriesTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(sizeFactorForSymmetricQueriesTextField)
                    .addComponent(sizeFactorForInequalityQueriesTextField)
                    .addComponent(sizeFactorForSingleTupleQueriesTextField)
                    .addComponent(probabilityFactorForStandardQueriesTextField)
                    .addComponent(probabilityFactorForSymmetricQueriesTextField)
                    .addComponent(probabilityFactorForInequalityQueriesTextField)
                    .addComponent(probabilityFactorForSingleTupleQueriesTextField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sizeFactorForStandardQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sizeFactorForSymmetricQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sizeFactorForInequalityQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sizeFactorForSingleTupleQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(probabilityFactorForStandardQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(probabilityFactorForSymmetricQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(probabilityFactorForInequalityQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(probabilityFactorForSingleTupleQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel10.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel11.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel12.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel13.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel14.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel15.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.jLabel16.text")); // NOI18N

        windowSizeFactorForStandardQueriesTextField.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.windowSizeFactorForStandardQueriesTextField.text")); // NOI18N

        windowSizeFactorForSymmetricQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.windowSizeFactorForSymmetricQueriesjTextField1.text")); // NOI18N

        windowSizeFactorForInequalityQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.windowSizeFactorForInequalityQueriesjTextField1.text")); // NOI18N

        windowSizeFactorForSingleTupleQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.windowSizeFactorForSingleTupleQueriesjTextField1.text")); // NOI18N

        offsetFactorForStandardQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.offsetFactorForStandardQueriesjTextField1.text")); // NOI18N

        offsetFactorForSymmetricQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.offsetFactorForSymmetricQueriesjTextField1.text")); // NOI18N

        offsetFactorForInequalityQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.offsetFactorForInequalityQueriesjTextField1.text")); // NOI18N

        offsetFactorForSingleTupleQueriesjTextField1.setText(org.openide.util.NbBundle.getMessage(ConfVioGenQPanel.class, "ConfVioGenQPanel.offsetFactorForSingleTupleQueriesjTextField1.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(windowSizeFactorForStandardQueriesTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(windowSizeFactorForSymmetricQueriesjTextField1)
                            .addComponent(windowSizeFactorForInequalityQueriesjTextField1)
                            .addComponent(windowSizeFactorForSingleTupleQueriesjTextField1)
                            .addComponent(offsetFactorForStandardQueriesjTextField1)
                            .addComponent(offsetFactorForSymmetricQueriesjTextField1)
                            .addComponent(offsetFactorForInequalityQueriesjTextField1)
                            .addComponent(offsetFactorForSingleTupleQueriesjTextField1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(windowSizeFactorForStandardQueriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(windowSizeFactorForSymmetricQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(windowSizeFactorForInequalityQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(windowSizeFactorForSingleTupleQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(offsetFactorForStandardQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(offsetFactorForSymmetricQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(offsetFactorForInequalityQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(offsetFactorForSingleTupleQueriesjTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator7)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField maxNumberOfRowsForSingleTupleQueriesjTextField1;
    private javax.swing.JTextField offsetFactorForInequalityQueriesjTextField1;
    private javax.swing.JTextField offsetFactorForSingleTupleQueriesjTextField1;
    private javax.swing.JTextField offsetFactorForStandardQueriesjTextField1;
    private javax.swing.JTextField offsetFactorForSymmetricQueriesjTextField1;
    private javax.swing.JTextField percentagjTextField1;
    private javax.swing.JTextField probabilityFactorForInequalityQueriesTextField;
    private javax.swing.JTextField probabilityFactorForSingleTupleQueriesTextField;
    private javax.swing.JTextField probabilityFactorForStandardQueriesTextField;
    private javax.swing.JTextField probabilityFactorForSymmetricQueriesTextField;
    private javax.swing.JTextField queryExecutorjTextField1;
    private javax.swing.JTextField sizeFactorForInequalityQueriesTextField;
    private javax.swing.JTextField sizeFactorForSingleTupleQueriesTextField;
    private javax.swing.JTextField sizeFactorForStandardQueriesTextField;
    private javax.swing.JTextField sizeFactorForSymmetricQueriesTextField;
    private javax.swing.JCheckBox useLimitInInequalityQueriesjCheckBox1;
    private javax.swing.JCheckBox useLimitInSingleTupleQueriesjCheckBox1;
    private javax.swing.JCheckBox useLimitInStandardQueriesjCheckBox1;
    private javax.swing.JCheckBox useLimitInSymmetricQueriesjCheckBox1;
    private javax.swing.JCheckBox useOffsetInInequalityQueriesjCheckBox1;
    private javax.swing.JCheckBox useOffsetInSingleTupleQueriesjCheckBox1;
    private javax.swing.JCheckBox useOffsetInStandardQueriesjCheckBox1;
    private javax.swing.JCheckBox useOffsetInSymmetricQueriesjCheckBox1;
    private javax.swing.JTextField windowSizeFactorForInequalityQueriesjTextField1;
    private javax.swing.JTextField windowSizeFactorForSingleTupleQueriesjTextField1;
    private javax.swing.JTextField windowSizeFactorForStandardQueriesTextField;
    private javax.swing.JTextField windowSizeFactorForSymmetricQueriesjTextField1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the maxNumberOfRowsForSingleTupleQueriesjTextField1
     */
    public javax.swing.JTextField getMaxNumberOfRowsForSingleTupleQueriesjTextField1() {
        return maxNumberOfRowsForSingleTupleQueriesjTextField1;
    }

    /**
     * @return the offsetFactorForInequalityQueriesjTextField1
     */
    public javax.swing.JTextField getOffsetFactorForInequalityQueriesjTextField1() {
        return offsetFactorForInequalityQueriesjTextField1;
    }

    /**
     * @return the offsetFactorForSingleTupleQueriesjTextField1
     */
    public javax.swing.JTextField getOffsetFactorForSingleTupleQueriesjTextField1() {
        return offsetFactorForSingleTupleQueriesjTextField1;
    }

    /**
     * @return the offsetFactorForStandardQueriesjTextField1
     */
    public javax.swing.JTextField getOffsetFactorForStandardQueriesjTextField1() {
        return offsetFactorForStandardQueriesjTextField1;
    }

    /**
     * @return the offsetFactorForSymmetricQueriesjTextField1
     */
    public javax.swing.JTextField getOffsetFactorForSymmetricQueriesjTextField1() {
        return offsetFactorForSymmetricQueriesjTextField1;
    }

    /**
     * @return the percentagjTextField1
     */
    public javax.swing.JTextField getPercentagjTextField1() {
        return percentagjTextField1;
    }

    /**
     * @return the probabilityFactorForInequalityQueriesTextField
     */
    public javax.swing.JTextField getProbabilityFactorForInequalityQueriesTextField() {
        return probabilityFactorForInequalityQueriesTextField;
    }

    /**
     * @return the probabilityFactorForSingleTupleQueriesTextField
     */
    public javax.swing.JTextField getProbabilityFactorForSingleTupleQueriesTextField() {
        return probabilityFactorForSingleTupleQueriesTextField;
    }

    /**
     * @return the probabilityFactorForStandardQueriesTextField
     */
    public javax.swing.JTextField getProbabilityFactorForStandardQueriesTextField() {
        return probabilityFactorForStandardQueriesTextField;
    }

    /**
     * @return the probabilityFactorForSymmetricQueriesTextField
     */
    public javax.swing.JTextField getProbabilityFactorForSymmetricQueriesTextField() {
        return probabilityFactorForSymmetricQueriesTextField;
    }

    /**
     * @return the queryExecutorjTextField1
     */
    public javax.swing.JTextField getQueryExecutorjTextField1() {
        return queryExecutorjTextField1;
    }

    /**
     * @return the sizeFactorForInequalityQueriesTextField
     */
    public javax.swing.JTextField getSizeFactorForInequalityQueriesTextField() {
        return sizeFactorForInequalityQueriesTextField;
    }

    /**
     * @return the sizeFactorForSingleTupleQueriesTextField
     */
    public javax.swing.JTextField getSizeFactorForSingleTupleQueriesTextField() {
        return sizeFactorForSingleTupleQueriesTextField;
    }

    /**
     * @return the sizeFactorForStandardQueriesTextField
     */
    public javax.swing.JTextField getSizeFactorForStandardQueriesTextField() {
        return sizeFactorForStandardQueriesTextField;
    }

    /**
     * @return the sizeFactorForSymmetricQueriesTextField
     */
    public javax.swing.JTextField getSizeFactorForSymmetricQueriesTextField() {
        return sizeFactorForSymmetricQueriesTextField;
    }

    /**
     * @return the useLimitInInequalityQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseLimitInInequalityQueriesjCheckBox1() {
        return useLimitInInequalityQueriesjCheckBox1;
    }

    /**
     * @return the useLimitInSingleTupleQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseLimitInSingleTupleQueriesjCheckBox1() {
        return useLimitInSingleTupleQueriesjCheckBox1;
    }

    /**
     * @return the useLimitInStandardQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseLimitInStandardQueriesjCheckBox1() {
        return useLimitInStandardQueriesjCheckBox1;
    }

    /**
     * @return the useLimitInSymmetricQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseLimitInSymmetricQueriesjCheckBox1() {
        return useLimitInSymmetricQueriesjCheckBox1;
    }

    /**
     * @return the useOffsetInInequalityQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseOffsetInInequalityQueriesjCheckBox1() {
        return useOffsetInInequalityQueriesjCheckBox1;
    }

    /**
     * @return the useOffsetInSingleTupleQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseOffsetInSingleTupleQueriesjCheckBox1() {
        return useOffsetInSingleTupleQueriesjCheckBox1;
    }

    /**
     * @return the useOffsetInStandardQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseOffsetInStandardQueriesjCheckBox1() {
        return useOffsetInStandardQueriesjCheckBox1;
    }

    /**
     * @return the useOffsetInSymmetricQueriesjCheckBox1
     */
    public javax.swing.JCheckBox getUseOffsetInSymmetricQueriesjCheckBox1() {
        return useOffsetInSymmetricQueriesjCheckBox1;
    }

    /**
     * @return the windowSizeFactorForInequalityQueriesjTextField1
     */
    public javax.swing.JTextField getWindowSizeFactorForInequalityQueriesjTextField1() {
        return windowSizeFactorForInequalityQueriesjTextField1;
    }

    /**
     * @return the windowSizeFactorForSingleTupleQueriesjTextField1
     */
    public javax.swing.JTextField getWindowSizeFactorForSingleTupleQueriesjTextField1() {
        return windowSizeFactorForSingleTupleQueriesjTextField1;
    }

    /**
     * @return the windowSizeFactorForStandardQueriesTextField
     */
    public javax.swing.JTextField getWindowSizeFactorForStandardQueriesTextField() {
        return windowSizeFactorForStandardQueriesTextField;
    }

    /**
     * @return the windowSizeFactorForSymmetricQueriesjTextField1
     */
    public javax.swing.JTextField getWindowSizeFactorForSymmetricQueriesjTextField1() {
        return windowSizeFactorForSymmetricQueriesjTextField1;
    }
}
